---
- name: "Check if {{ aliases_user }} exists"
  getent:
    database: passwd
    key: "{{ aliases_user }}"
    fail_key: false
  register: check_user

- name: Create user if not exist
  user:
    name: "{{ aliases_user }}"
  when: check_user

#
# bashrc file section
#
- name: Check if .bashrc exists
  stat:
    path: '/home/{{ aliases_user }}/.bashrc'
  register: bashrc

- name: Add code to .bashrc file if exists
  blockinfile:
    path: '/home/{{ aliases_user }}/.bashrc'
    marker: '# {mark} ANSIBLE MANAGED BLOCK for custom alias file'
    block: |
      if [ -f ~/.aliases ]; then
        . ~/.aliases
      fi
  when: bashrc.stat.exists

- name: Insert blank line before the marker
  lineinfile:
    path: '/home/{{ aliases_user }}/.bashrc'
    insertbefore: '^# BEGIN ANSIBLE MANAGED BLOCK'
    line: ' '

#
# zshrc file section
#
- name: Check if .zshrc exists
  stat:
    path: '/home/{{ aliases_user }}/.zshrc'
  register: zshrc

- name: Add code to .zshrc file if exists
  blockinfile:
    path: '/home/{{ aliases_user }}/.zshrc'
    marker: '# {mark} ANSIBLE MANAGED BLOCK for custom alias file'
    block: |
      if [ -f ~/.aliases ]; then
        . ~/.aliases
      fi
  when: zshrc.stat.exists

#
# Alias file section
#
- name: "Check if .alias file exists in /home/{{ aliases_user }}"
  stat:
    path: '/home/{{ aliases_user }}/.aliases'
  register: alias

- name: Create .aliases file
  file:
    path: '/home/{{ aliases_user }}/.aliases'
    state: touch
    owner: '{{ aliases_user }}'
    group: '{{ aliases_user }}'
  when: not alias.stat.exists

- name: Setup custom aliases
  blockinfile:
    path: '/home/{{ aliases_user }}/.aliases'
    marker: '# {mark} ANSIBLE MANAGED BLOCK for custom alias'
    block:
      "{{ aliases }}"
