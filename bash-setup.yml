---
- name: Setup bash
  hosts: all
  become: yes
  tasks:
    - name: Set bashrc path for Ubuntu
      set_fact:
        bashrc_path: /etc/bash.bashrc
      when: ansible_os_family == "Debian"

    - name: Set bashrc path for RedHat
      set_fact:
        bashrc_path: /etc/bashrc
      when: ansible_os_family == "RedHat"

    - name: Configure prompt
      blockinfile:
        path: "{{ bashrc_path }}"
        marker: "# {mark} ANSIBLE MANAGED BLOCK for bash prompt"
        block: |
          force_color_prompt=yes

          function nonzero_return() {
            RETVAL=$?
            [ $RETVAL -ne 0 ] && echo "$RETVAL"
          }
          
          # get current branch in git repo
          function parse_git_branch() {
              BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
              if [ ! "${BRANCH}" == "" ]
              then
                      STAT=`parse_git_dirty`
                      printf "\033[37mon \033[0;38;5;227mgit ∦${BRANCH} ${STAT}"
              else
                      echo ""
              fi
          }
          
          # get current status of git repo
          function parse_git_dirty {
              status=`git status 2>&1 | tee`
              dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
                  untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
                  ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
                  newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
                  renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
                  deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
                  bits=''
              if [ "${renamed}" == "0" ]; then
                  bits=">${bits}"
              fi
              if [ "${ahead}" == "0" ]; then
                  bits="↑${bits}"
              fi
              # TODO
              # if [ "${behind}" == "0" ]; then
              #     bits="↓{bits}"
              # fi
              if [ "${newfile}" == "0" ]; then
                  bits="+${bits}"
              fi
              if [ "${untracked}" == "0" ]; then
                  bits="?${bits}"
              fi
              if [ "${deleted}" == "0" ]; then
                  bits="-${bits}"
              fi
              if [ "${dirty}" == "0" ]; then
                  bits="~${bits}"
              fi
              if [ ! "${bits}" == "" ]; then
                  echo "(${bits}) "
              else
                  echo ""
              fi
          }

          function parse_server {
            if [[ ! $(grep -i Microsoft /proc/version) ]]; then
              printf "(remote)"
            else
              printf " - WSL"
            fi
          }
          
          if [ "$LOGNAME" = root ] || [ "`id -u`" -eq 0 ] ; then
              PS1="\n\[\e[0;38;5;196m\]┌ \[\e[0;38;5;196m\]☻ \u\[\e[0;97m\] @ \[\e[0;38;5;39m\]\H\`parse_server\`\[\e[0;38;5;246m\] in \[\e[0;97m\]\w \`parse_git_branch\`\[\e[0;38;5;246m\]at \t\[\e[01;31m\]\`nonzero_return\`\[\e[0;38;5;196m\]\n└ \[\e[1;38;5;196m\]# \[\e[m\]"
              else
              PS1="\n\[\e[0;38;5;46m\]┌ \[\e[0;38;5;46m\]☻ \u\[\e[0;97m\] @ \[\e[0;38;5;39m\]\H\`parse_server\`\[\e[0;38;5;246m\] in \[\e[0;97m\]\w \`parse_git_branch\`\[\e[0;38;5;246m\]at \t\[\e[01;31m\]\`nonzero_return\`\[\e[0;38;5;46m\]\n└ \[\e[1;38;5;46m\]\$ \[\e[m\]"
          fi

          # enable color support of ls, less and man, and also add handy aliases
          if [ -x /usr/bin/dircolors ]; then
              test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
              export LS_COLORS="$LS_COLORS:ow=30;44:" # fix ls color for folders with 777 permissions
          
              alias ls='ls --color=auto'
              #alias dir='dir --color=auto'
              #alias vdir='vdir --color=auto'
          
              alias grep='grep --color=auto'
              alias fgrep='fgrep --color=auto'
              alias egrep='egrep --color=auto'
              alias diff='diff --color=auto'
              alias ip='ip --color=auto'
          
              export LESS_TERMCAP_mb=$'\E[1;31m'     # begin blink
              export LESS_TERMCAP_md=$'\E[1;36m'     # begin bold
              export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
              export LESS_TERMCAP_so=$'\E[01;33m'    # begin reverse video
              export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
              export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
              export LESS_TERMCAP_ue=$'\E[0m'        # reset underline
          fi
        
          # enable git completion
          for file in /usr/share/git-core/contrib/completion/git-prompt.sh ; do
              source "$file"
          done
