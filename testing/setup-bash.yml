---
- name: Setup bash
  hosts: all
  become: true
  tasks:
    - name: Configure prompt
      blockinfile:
        path: /etc/bashrc
        marker: "# {mark} ANSIBLE MANAGED BLOCK for bash prompt"
        block: |
          force_color_prompt=yes

          function nonzero_return() {
            RETVAL=$?
            [ $RETVAL -ne 0 ] && echo "$RETVAL"
          }
          
          # get current branch in git repo
          function parse_git_branch() {
                  BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
                  if [ ! "${BRANCH}" == "" ]
                  then
                          STAT=`parse_git_dirty`
                          printf "\033[37m on \033[0;38;5;227mgit (${BRANCH}${STAT})"
                  else
                          echo ""
                  fi
          }
          
          # get current status of git repo
          function parse_git_dirty {
                  status=`git status 2>&1 | tee`
                  dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
                  untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
                  ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
                  newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
                  renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
                  deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
                  bits=''
                  if [ "${renamed}" == "0" ]; then
                          bits=">${bits}"
                  fi
                  if [ "${ahead}" == "0" ]; then
                          bits="*${bits}"
                  fi
                  if [ "${newfile}" == "0" ]; then
                          bits="+${bits}"
                  fi
                  if [ "${untracked}" == "0" ]; then
                          bits="?${bits}"
                  fi
                  if [ "${deleted}" == "0" ]; then
                          bits="x${bits}"
                  fi
                  if [ "${dirty}" == "0" ]; then
                          bits="!${bits}"
                  fi
                  if [ ! "${bits}" == "" ]; then
                          echo " ${bits}"
                  else
                          echo ""
                  fi
          }
          
          if [ "$LOGNAME" = root ] || [ "`id -u`" -eq 0 ] ; then
                  PS1="\n\[\e[01;31m\][\[\e[m\] \[\e[31m\]\u\[\e[m\]@\[\e[37m\]\H\[\e[m\] : \[\e[31m\]\w\[\e[m\] \[\e[31m\]]\[\e[m\] \[\e[31m\]\`nonzero_return\`\[\e[m\]\n\[\e[31m\]\\$\[\e[m\] "
          else
                  PS1="\n\[\e[0;97m\][ \[\e[0;38;5;46m\]\u\[\e[m\] @ \[\e[0;38;5;39m\]\H\[\e[1;97m\] : \[\e[0;38;5;246m\]\w\[\e[m\] \[\e[0;97m\]]\[\e[39m\]\`parse_git_branch\`\[\e[0m\]\[\e[01;31m\]\`nonzero_return\`\[\e[0;97m\]\n\\$ \[\e[m\]"
          fi

          source /usr/share/bash-completion/completions/git
